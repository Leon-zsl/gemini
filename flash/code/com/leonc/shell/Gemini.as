package com.leonc.shell{import flash.display.MovieClip;import flash.events.Event;import flash.display.StageScaleMode;import flash.display.Loader;import flash.system.LoaderContext;import flash.system.ApplicationDomain;import flash.net.URLRequest;import flash.external.*;import scaleform.gfx.SystemEx;import scaleform.gfx.Extensions;import com.leonc.gemini.Main;//this is the shell class used to download the real main swfpublic class Gemini extends MovieClip{    //used for swf and gfx    public const AF_USE_LOCAL:int = 0    public const AF_USE_REMOTE:int = 1    public const AF_UNKNOWNASSET:int = -1    public const AF_DOWNLOADFAILED:int = -2    //used for bin data    public const ASSET_OK:int = 0    public const ASSET_ERR_UNKNOWNASSET:int = -1    public const ASSET_ERR_LOADFAILED:int = -2    public const ASSET_ERR_DOWNLOADFAILED:int = -3	private var _startsystem:Boolean;	private var _prepared:Boolean;	private var _mainSwfLoader:Loader;	private var _main:Main;	public function get main():Main { return _main; }	public function Gemini():void	{		super();		stage.scaleMode = StageScaleMode.NO_BORDER;		stage.scaleMode = StageScaleMode.NO_SCALE;		SystemEx.setBackgroundAlpha(0);		Extensions.enabled = true;		Extensions.noInvisibleAdvance = true;		trace("gemini shell constructor...");		addEventListener( Event.ADDED_TO_STAGE, startup, false, 0, true );	}	public function startup(e:Event):void	{		removeEventListener( Event.ADDED_TO_STAGE, startup, false );		//do nothing now		addEventListener( Event.ENTER_FRAME, tick, false, 0, true );	}		public function tick(e:Event):void	{		prepareSystem();		checkAssetManager();	}	public function _onPrepared(val:Boolean):void	{		_prepared = val;		if(_prepared) loadMainSwf();	}	public function _onLoadMainSwf(name:String, status:int, internalError:int, path:String):void	{		trace("load main swf: " + name);		        if(status == AF_UNKNOWNASSET || status == AF_DOWNLOADFAILED) {			trace("download main swf error: " + status);        } else {			var cont:LoaderContext = new LoaderContext(false, ApplicationDomain.currentDomain);            var request:URLRequest = new URLRequest(path);            var l:Loader = new Loader();            l.load(request, cont);			l.contentLoaderInfo.addEventListener(Event.COMPLETE, mainSwfLoaded);			_mainSwfLoader = l;			addChild(l);        }	}	private function mainSwfLoaded(e:Event):void	{		_main = _mainSwfLoader.content as Main;		trace("main swf object: " + _main);	}	private function prepareSystem():void	{		if(_startsystem) return;		ExternalInterface.call("Asset_Prepare", "/", "http://10.80.129.208", "index.info", 8);		_startsystem = true;	}	private function checkAssetManager():void	{		if(_prepared) return;		ExternalInterface.call("Asset_Prepared", 0);	}	private function loadMainSwf():void	{		if(!_prepared) return;		ExternalInterface.call("Asset_LoadMainSwf", "main.swf");	}}}